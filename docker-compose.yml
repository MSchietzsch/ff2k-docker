version: '3'

services:

  elasticsearch:
    build:
      context: elasticsearch/
    container_name: ff2k_elasticsearch
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ff2k-el-master:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      discovery.type: zen
    networks:
      - ff2k

  el-node:
    build:
      context: elasticsearch/
    depends_on:
      - elasticsearch
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      discovery.type: zen
      discovery.zen.ping.unicast.hosts: elasticsearch
    networks:
      - ff2k    
    restart: on-failure

  logstash:
    build:
      context: logstash/
    container_name: ff2k_logstash    
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5000:5000"
      - "5959:5959"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - ff2k
    depends_on:
      - elasticsearch
    restart: on-failure:5


  kibana:
    build:
      context: kibana/
    container_name: ff2k_kibana    
    volumes:
      - ./kibana/config/:/usr/share/kibana/config:ro
    ports:
      - "5601:5601"
    networks:
      - ff2k
    depends_on:
      - elasticsearch
    restart: on-failure

  mysql:
    build:
      context: mysql/
    container_name: ff2k_mysql
    volumes:
      - ./mysql/config/my.cnf:/etc/mysql/my.cnf:ro
      - ff2k-mysql-data:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=ff2kdb
      - MYSQL_USER=ff2k
      - MYSQL_PASSWORD=somepass
      - MYSQL_ROOT_PASSWORD=some_password
    ports:
      - "3306:3306"
    networks:
      - ff2k
    restart: on-failure:3

  memcached1:
    image:  memcached:alpine
    hostname: memcached1
    container_name: ff2k_memcached1
    command: memcached
    networks:
      - ff2k
    restart: on-failure:3

  memcached2:
    image:  memcached:alpine
    hostname: memcached2    
    container_name: ff2k_memcached2
    command: memcached
    networks:
      - ff2k
    restart: on-failure:3

  web_master:
    build:
      context: django-site/
    container_name: ff2k_webmaster 
    depends_on:
      - mysql
      - elasticsearch
    environment:
      - DJANGO_ENVIRONMENT=docker_compose
    command: >
      sh -c "sleep 60 && \
               python manage.py makemigrations ff2ksite && \
               python manage.py makemigrations &&          \     
               python manage.py migrate &&               \
               python manage.py loaddata ff2k/fixtures/sites.json &&\
               python manage.py loaddata ff2k/fixtures/users.json &&\
               python manage.py loaddata ff2ksite/fixtures/ff2ksite_data.json &&\
               python manage.py collectstatic --noinput &&\
               daphne -e ssl:8443:privateKey=privkey.pem:certKey=cert.pem ff2k.asgi:application -v 1"
    networks:
      - ff2k
    restart: on-failure:5

  web:
    image: ff2kdocker_web_master:latest
    depends_on:
      - mysql
      - elasticsearch
    environment:
      - DJANGO_ENVIRONMENT=docker_compose
    command: >
      sh -c "daphne -e ssl:8443:privateKey=privkey.pem:certKey=cert.pem ff2k.asgi:application -v 1"
    networks:
      - ff2k
    restart: on-failure    

  haproxy:
    build:
      context: haproxy/
    container_name: ff2k_HA
    depends_on:
      - web
      - logstash
    volumes:
      - ./haproxy/config/:/usr/local/etc/haproxy:ro
      - ./haproxy/certbot.sh:/etc/periodic/daily/certbot.sh:ro
    ports:
      - "8181:8181"
      - "80:80"
      - "443:443"
    networks:
      - ff2k
    restart: on-failure    

  redis:
    build:
      context: redis/
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: "redis-server /usr/local/etc/redis/redis.conf"
    networks:
      - ff2k
    restart: on-failure:3

networks:

  ff2k:
    driver: bridge

volumes:
  ff2k-el-master:
  ff2k-mysql-data:
  